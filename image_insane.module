<?php

/**
 * @file
 * Allows editors to easily change images on site.
 */

function image_insane_init(){

	drupal_add_js(drupal_get_path('module', 'image_insane') . '/js/image_insane.js');

	drupal_add_js(array(
    'image_insane' => array(
      'post_url' => '/image_insane_file_upload',
    ),
  ),
  'setting');

}

/**
 * Implements hook_menu().
 */
function image_insane_menu(){

	$items['image_insane_file_upload'] = array(
    'title' => t('AJAX callback/listener for file uploads'),
    'page callback' => _image_insane_upload_callback,
    'access arguments' => array(
      'access content',
    ),
  );

  return $items;
}

function _image_insane_upload_callback(){

	if(array_key_exists('json', $_POST)){
		$json_data = json_decode($_POST['json']);


		//	NODE variables
		$nid = $json_data->nid;
		$image_style = $json_data->image_style;
		$image_field_name = $json_data->image_field_name;

		//	File/image properties
		$base64_data = $json_data->base64;
		list($type, $base64_data) = explode(';', $base64_data);
		list(, $base64_data) = explode(',', $base64_data);
		$base64_data = base64_decode($base64_data);

		$file = file_save_data($base64_data, 'public://'.$json_data->name);


		//	Load node
	  $node = node_load($nid);
	  
		//	Delete olf file and it's db record
		$previous_file = file_load($node->field_image[und][0]['fid']);
		file_delete($previous_file);

		//	new file
		$node->field_image[und][0] = array(
			'fid' => $file->fid,
			'uri' => $file->uri,
			'filename' => $file->filename,
			'filemime' => $file->filemime,
			'uid' => $file->uid,
			'status' => $file->status,
			'timestamp' => $file->timestamp,
			'filesize' => $file->filesize,
		);
		field_attach_update('node', $node);

	  //print_r($file);

	  print image_style_url($image_style, $node->field_image[und][0]['uri']);
		

	}


	return NULL;
}

/**
* Implements hook_preprocess_field().
*/
function image_insane_preprocess_field(&$variables) {

	//dsm($variables);

	if($variables['element']['#field_type'] == 'image'){

		//	Get the first item
		$item = reset($variables['items']);

		//	Node id
		$nid = $variables['element']['#object']->nid;
		//	Image style
		$image_style = $item['#image_style'];
		//	Image field name
		$image_field_name = $variables['element']['#field_name'];
		
		//	Add data attributes for images
		$item['#item']['attributes'] = array(
			'class' => 'image-insane-item',
			'data-image-style' => $image_style,
			'data-nid' => $nid,
			'data-image-field-name' => $image_field_name,
		);

		unset($variables['items']);
		$variables['items'][] = $item;

		// dsm($item);
		// dsm($nid);

	}
	// dsm($variables);
	// dsm('------');

}
